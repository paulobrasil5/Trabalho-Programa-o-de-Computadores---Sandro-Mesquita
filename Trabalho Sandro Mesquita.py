# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h0U7Te_XTXbDGkepAKAOPQnVxY_Oqk8I
"""

import csv

class Produto:
    def __init__(self, nome, preco, quantidade):
        self.nome = nome
        self.preco = preco
        self.quantidade = quantidade

    def __str__(self):
        return f"{self.nome} - Preço: R${self.preco:.2f}, Estoque: {self.quantidade} unidades"

class Loja:
    def __init__(self):
        self.produtos = {}
        self.vendas = []

    def cadastrar_produto(self):
        nome = input("Digite o nome do produto: ")
        preco = float(input(f"Digite o preço do produto '{nome}': "))
        quantidade = int(input(f"Digite a quantidade de '{nome}' em estoque: "))

        if nome in self.produtos:
            print(f"Produto '{nome}' já está cadastrado.")
        else:
            produto = Produto(nome, preco, quantidade)
            self.produtos[nome] = produto
            print(f"Produto '{nome}' cadastrado com sucesso.\n")

    def registrar_venda(self):
        nome_produto = input("Digite o nome do produto vendido: ")
        quantidade_vendida = int(input(f"Digite a quantidade vendida de '{nome_produto}': "))

        if nome_produto in self.produtos:
            produto = self.produtos[nome_produto]
            if produto.quantidade >= quantidade_vendida:
                produto.quantidade -= quantidade_vendida
                total_venda = quantidade_vendida * produto.preco
                self.vendas.append((nome_produto, quantidade_vendida, total_venda))
                print(f"Venda registrada: {quantidade_vendida} unidades de '{nome_produto}' por R${total_venda:.2f}\n")
            else:
                print(f"Estoque insuficiente para '{nome_produto}'.\n")
        else:
            print(f"Produto '{nome_produto}' não encontrado.\n")

    def gerar_relatorio_vendas(self):
        if not self.vendas:
            print("Nenhuma venda registrada.\n")
        else:

            nome_arquivo = "relatorio_vendas.csv"


        with open(nome_arquivo, mode="w", newline='', encoding="utf-8") as arquivo_csv:
            escritor_csv = csv.writer(arquivo_csv, delimiter=';')


            escritor_csv.writerow(["Produto", "Quantidade", "Total (R$)"])

            total_vendas = 0


            for venda in self.vendas:
                nome_produto, quantidade, valor = venda
                escritor_csv.writerow([nome_produto, quantidade, f"R${valor:.2f}"])
                total_vendas += valor


            escritor_csv.writerow(["Total Geral", "", f"R${total_vendas:.2f}"])

        print(f"Relatório de vendas gerado com sucesso: {nome_arquivo}\n")

    def listar_produtos(self):
        if not self.produtos:
            print("Nenhum produto cadastrado.\n")
        else:
            print("\nProdutos Disponíveis:")
            print("-" * 30)
            for produto in self.produtos.values():
                print(produto)
            print("-" * 30)

def menu():
    loja = Loja()

    while True:
        print("\n--- Sistema de Controle de Vendas ---")
        print("1. Cadastrar Produto")
        print("2. Registrar Venda")
        print("3. Listar Produtos")
        print("4. Gerar Relatório de Vendas")
        print("5. Sair")

        opcao = input("Escolha uma opção: ")

        if opcao == "1":
            loja.cadastrar_produto()
        elif opcao == "2":
            loja.registrar_venda()
        elif opcao == "3":
            loja.listar_produtos()
        elif opcao == "4":
            loja.gerar_relatorio_vendas()
        elif opcao == "5":
            print("Saindo do sistema...")
            break
        else:
            print("Opção inválida, tente novamente.\n")

iniciar = input("Deseja iniciar o sistema de controle de vendas? (s/n): ").lower()

if iniciar == "s":
    menu()
else:
    print("Sistema não iniciado.")